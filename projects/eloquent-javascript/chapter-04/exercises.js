////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(x, y, z) {
  let rangeArray=[];
  if (x === y) {
      return rangeArray;
  } else if (z > 0) {
    for (var i = x; i <= y; i += z) {
      rangeArray.push(i);
    }
  }
  else if (z < 0) {
    for (var i = x; i >= y; i += z) {
      rangeArray.push(i);
    }
  }
  else {
     for (var i = x; i <= y; i++) {
      rangeArray.push(i);
    }    
  }
  return rangeArray;
}


////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
function sum(numbers) {
  let result = 0;
  for (let num of numbers) {
    result += num;
  }
  return result;
}


////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array) {
  let newArray = [];
  for (let i = array.length - 1; i > -1; i--)
      newArray.push(array[i]);
  return newArray;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace(arr) {
  var temp = 0;
  for (var i = 0; i < arr.length / 2; i++) {
      temp = arr[i];
      arr[i] = arr[arr.length - i - 1];
      arr[arr.length - i - 1] = temp;
  }
};


//////////////////////////////////////////////////////////////////////////////
arrayToList /////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function arrayToList(array) {
  let rest = null;
  for (let i = array.length - 1; i > -1; i--) {
    rest = { value: array[i], rest }
  }
  return rest;
}

//////////////////////////////////////////////////////////////////////////////
listToArray /////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function listToArray(list) {
  let result = [];
  if (typeof list === 'undefined' || list.value === undefined || list.rest === undefined) {
    return result;
  } else {
    result.push(list.value);
    while (list.hasOwnProperty('rest') && list.rest !== null) {
      list = list.rest;
      if (list.hasOwnProperty('value')) {
          result.push(list.value);
      }
    }
  }
  return result;
}

//////////////////////////////////////////////////////////////////////////////
prepend /////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

function prepend(element, list) {
  return {
    value: element,
    rest: list
  };
}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth(list, number) {
  return listToArray(list)[number];
}


////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

var deepEqual = function (x, y) {
  if (x === y) {
    return true;
  } else if ((typeof x == 'object' && x != null) && (typeof y == 'object' && y != null)) {
    if (Object.keys(x).length != Object.keys(y).length) {
      return false;
    }
    for (var value in x) {
      if (y.hasOwnProperty(value)) {
        if (! deepEqual(x[value], y[value])) {
          return false;
        }
      } else {
        return false;
      }
    } return true;
  } else {
    return false;
  }
}


////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
