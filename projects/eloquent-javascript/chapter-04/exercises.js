////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(x, y, z) {
  let array = [];
  if (x < y) {
    while (x < y + 1) {
      array.push(x);
      x = x + z;
    }
  } else if (y < x) {
    while (y < x + 1) {
      array.push(x);
      x = x - z;
    }
  }
  return array;
}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function sum(x, y) {
  let sum = 0;
  if (x < y) {
    while (x < y + 1) {
      sum = sum + x;
      x = x + 1;
    }
  } else if (y < x) {
    while (y < x + 1) {
      sum = sum + x;
      x = x - 1;
    }
  }
  return sum;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array) {
  let newArray = [];
  for (let i = array.length - 1; i > -1; i--)
      newArray.push(array[i]);
  return newArray;
};

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace() {
  if (array.length === 0) {
    return array;
  } else 
  return reverseArr(array.slice(1)).concat(array[0]);
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList() {
  let rest = null;
  for (let i = array.length - 1; i > -1; i--) {
    rest = { value: array[i], rest }
  }
  return rest;
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray() {
  let newArray = [];
  newArray.push(list.value);
  while (list.hasOwnProperty('rest') && list.rest !== null) {
    list = list.rest;
    if (list.hasOwnProperty('value')) {
      newArray.push(list.value);
    }
  }
  return newArray;
}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend(element, list) {
  return {
    value: element,
    rest: list
  };
}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth(list, n) {
  if (n === 0) {
    return list.value;
  }
  return nth(list.rest, n - 1);
}


////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

var deepEqual = function (x, y) {
  if (x === y) {
    return true;
  } else if ((typeof x == 'object' && x != null) && (typeof y == 'object' && y != null)) {
    if (Object.keys(x).length != Object.keys(y).length) {
      return false;
    }
    for (var value in x) {
      if (y.hasOwnProperty(value)) {
        if (! deepEqual(x[value], y[value])) {
          return false;
        }
      } else {
        return false;
      }
    } return true;
  } else {
    return false;
  }
}


////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
